{"mappings":"AAAA,MAAM,eAAe,SAAS,cAAc;AAC5C,MAAM,eAAe,SAAS,cAAc;AAC5C,MAAM,iBAAiB;AACvB,IAAI,oBAAoB;AACxB,MAAM,kBAAkB,CAAC;IACrB,aAAa,QAAQ,CAAC,WAAW;QAC7B,MAAM,UAAU,aAAa,iBAAiB,YAAY,CAAC,MAAM;QACjE,MAAM,aAAa,QAAQ,cAAc;QACzC,MAAM,cAAc,QAAQ,cAAc;QAE1C,iDAAiD;QACjD,MAAM,iBAAgB,CAAC,uBAAuB,EAAE,UAAU,SAAS,CAAC;QACpE,WAAW,MAAM;QAChB,gFAAgF;QAChF,WAAW,SAAS;YACjB,QAAQ,UAAU,OAAO;YACzB,YAAY,aAAa,QAAS;YAClC,YAAY,aAAa,YAAW,CAAC,EAAE,IAAI,OAAO,UAAU,IAAI,CAAC;QACpE;IACT;AACA;AAEA,MAAM,mBAAmB,OAAM,YAAY;IACvC,IAAG;QACC,0EAA0E;QAC1E,MAAM,WAAW,MAAM,MAAM,gDAAgD;YACzE,QAAQ;YACR,SAAS;gBACL,gBAAiB;gBACjB,iBAAgB,CAAC,OAAO,EAAE,eAAe,CAAC;YAC9C;YAEA,MAAM,KAAK,UAAU;gBACjB,QAAQ;gBACR,GAAG,SAAS;gBACZ,MAAM;gBACN,iBAAiB;YAErB;QACJ;QACA,IAAG,CAAC,SAAS,IAAI,MAAM,IAAI,MAAO;QAClC,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,SAAS,QAAQ,4BAA4B;QAClE,gBAAgB;eAAI;SAAK;IAEzB,EAAE,OAAO,OAAO;QAChB,MAAM,MAAM;IACZ,SAAS;QACL,oBAAoB;IACxB;AACR;AACA,MAAM,uBAAuB,OAAM;IAC/B,EAAE;IACF,IAAG,mBAAmB;IACtB,oBAAmB;IACnB,wDAAwD;IAExD,MAAM,aAAa,EAAE,UAAU,CAAC,EAAE,CAAC;IACnC,MAAM,kBAAkB,EAAE,UAAU,CAAC,EAAE,CAAC;IAExC,iBAAkB,YAAY;IAE9B,2CAA2C;IAC3C,MAAM,iBAAiB,YAAW;IAElC,MAAM,gBAAgB,MAAM,KAAK;QAAC,QAAQ;IAAe,GAAE,IACvD,CAAC;;;;;cAKK,CAAC,EACT,KAAK;IAER,aAAa,YAAY;AAC5B;AAEA,aAAa,iBAAiB,UAAU","sources":["imageGenerator/generator.js"],"sourcesContent":["const generateForm = document.querySelector(\".generate-form\");\r\nconst imageGallery = document.querySelector(\".image-gallery\");\r\nconst OPENAI_API_KEY = \"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\";\r\nlet isImageGenerating = false;\r\nconst updateImageCard = (imgDataArray) => {\r\n    imgDataArray.forEach((imgObject, index) => {\r\n        const imgCard = imageGallery.querySelectorAll(\".img-card\")[index];\r\n        const imgElement = imgCard.querySelector(\"img\");\r\n        const downloadBtn = imgCard.querySelector(\".download-btn\");\r\n\r\n        //set the image source to AI-generated image data\r\n        const aiGeneratedImg =`data:image/jpeg;base64,${imgObject.b64_json}`;\r\n        imgElement.src = aiGeneratedImg;\r\n         //when the image is loaded, remove the loading class and set download attributes\r\n         imgElement.onload = () => {\r\n            imgCard.classList.remove(\"loading\");\r\n            downloadBtn.setAttribute(\"href\" , aiGeneratedImg);\r\n            downloadBtn.setAttribute(\"download\",`${new Date().getTime()}.jpg`);\r\n         }\r\n})\r\n}\r\n\r\nconst generateAiImages = async(userPrompt, userImgQuantity) => {\r\n    try{\r\n        //send a request to the openAI API to generate images based on user inputs\r\n        const response = await fetch(\"https://api.openai.com/v1/images/generations\" ,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\" ,\r\n                \"Authorization\":`Bearer ${OPENAI_API_KEY}`\r\n            },\r\n\r\n            body: JSON.stringify({\r\n                prompt: userPrompt,\r\n                n: parseInt(userImgQuantity),\r\n                size: \"512x512\",\r\n                response_format: \"b64_json\"\r\n\r\n            })\r\n        });\r\n        if(!response.ok) throw new Error (\"Welcome, this process may take some time! pleas be patient.\");\r\n        const {data} = await response.json(); //Get data from the response\r\n        updateImageCard([...data])\r\n\r\n        } catch (error) {\r\n        alert(error.message);\r\n        } finally{\r\n            isImageGenerating = false;\r\n        }\r\n}\r\nconst handleFormSubmission = async(e) => {\r\n    e.preventDefault();\r\n    if(isImageGenerating) return;\r\n    isImageGenerating =true;\r\n    //Get user input and image quantity values from the form\r\n    \r\n    const userPrompt = e.srcElement[2].value; \r\n    const userImgQuantity = e.srcElement[1].value;\r\n\r\n    generateAiImages( userPrompt, userImgQuantity);\r\n\r\n    //call generateAiImages with the user input\r\n    await generateAiImages(userPrompt,userImgQuantity);\r\n\r\n    const imgCardMarkup = Array.from({length: userImgQuantity},() =>\r\n        `<div class=\"img-card loading\">\r\n           <img src=\"images/loader.svg\" alt=\"image\">\r\n           <a href=\"#\" class=\"download-btn\">\r\n                <img src=\"images/download.svg\" alt=\"download icon\">\r\n           </a>\r\n        </div>`\r\n    ).join(\"\");\r\n\r\n   imageGallery.innerHTML = imgCardMarkup;\r\n}\r\n\r\ngenerateForm.addEventListener(\"submit\", handleFormSubmission);\r\n\r\n\r\n\r\n"],"names":[],"version":3,"file":"generator.7cc8662c.js.map","sourceRoot":"/__parcel_source_root/"}